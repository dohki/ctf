import re
from z3 import *
from collections import defaultdict
import json
import requests
from html.parser import HTMLParser
import matplotlib.pyplot as plt

HOST = "http://175.118.127.123:5000/"

print("Downloading info ...")
try:
    with open("solves.json", "r") as f:
        solves = json.load(f)
except:
    solves = {}
    class TeamURLHTMLParser(HTMLParser):
        def handle_starttag(self, tag, attrs):
            if tag == "a":
                for (k, v) in attrs:
                    if k == "href" and v.startswith("/team"):
                        team = v[6:]
                        content = requests.get(HOST + v).content.decode()
                        solves[team] = list(map(int, re.findall("Chal-([\d]+)", content)))

    parser = TeamURLHTMLParser()
    parser.feed(requests.get(HOST).content.decode())

    solves_freqs = defaultdict(int)
    for probs in solves.values():
        for prob in probs:
            solves_freqs[prob] += 1

    for (team, probs) in solves.items():
        tmp = defaultdict(int)
        for prob in probs:
            tmp[solves_freqs[prob]] += 1
        solves[team] = tmp

    with open("solves.json", "w") as f:
        json.dump(solves, f)
print("Downloading info ... done")

with open("scoreboard.txt", "r") as f:
    target_scoreboard = f.read().strip().splitlines()

s = Solver()
scores = [Int(f"x{i+1}") for i in range(len(solves))]
for score in scores:
    s.add(0 < score)
    s.add(score < 1000000000)
for i in range(len(scores) - 1):
    s.add(scores[i] > scores[i+1])

def calc_score(solves):
    ret = 0
    for (prob, cnt) in solves.items():
        ret += scores[int(prob) - 1] * cnt
    return ret

team_scores = [calc_score(solves[team]) for team in target_scoreboard]
for i in range(len(team_scores) - 1):
    if target_scoreboard[i] < target_scoreboard[i + 1]:
        s.add(team_scores[i] >= team_scores[i+1])
    else:
        s.add(team_scores[i] > team_scores[i+1])

assert s.check() == sat

model = s.model()
data = {}
for (i, score) in enumerate(scores):
    data[f"input{i+1}"] = model[score]
r = requests.post(HOST + "/check", data=data)
print(r.content.decode())